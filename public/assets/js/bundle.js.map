{"version":3,"sources":["webpack:///webpack/bootstrap c4afb38ce57de44598e7","webpack:///./integrations/index.js","webpack:///./integrations/wrappers/amChartsWrapper.js","webpack:///./integrations/wrappers/chartJsWrapper.js","webpack:///./integrations/wrappers/fusionChartsWrapper.js","webpack:///./integrations/wrappers/highchartsWrapper.js"],"names":["SELECTED_CLASS","START","PAUSE","RESET","STARTTIME","chartWrappers","mapTimerRow","Map","mapChartsToWrapper","set","Timer","row","interval","currentTime","duration","timeStamp","Date","status","hotInstance","column","getDataAtCell","moment","setInterval","getTime","asSeconds","hours","minutes","seconds","setDataAtCell","clearInterval","initButtonsListener","rootElement","document","getElementById","rowIndex","countRows","addEventListener","event","target","isButton","nodeName","toLowerCase","td","parentNode","colIndex","cellIndex","textContent","get","start","pause","reset","onAfterInit","isListItem","getElementsByTagName","allListItems","Array","from","forEach","li","Handsontable","dom","hasClass","chartName","children","ActiveChartWrapper","push","onAfterSetDataAtCell","changes","change","chartWrapper","currentValue","updateCellData","onAfterRemoveRow","index","removeRow","onAfterCreateRow","addNewRow","startPauseButtonRenderer","instance","col","prop","value","escaped","undefined","helper","stringify","addClass","innerHTML","resetButtonRenderer","renderers","registerRenderer","hot","data","colHeaders","rowHeaders","columns","type","source","dateFormat","correctFormat","allowEmpty","timeFormat","readOnly","renderer","contextMenu","className","width","colWidth","allowInvalid","autoWrapCol","autoWrapRow","afterInit","afterSetDataAtCell","afterRemoveRow","afterCreateRow","AmChartsWrapper","amChartsRootId","name","chart","AmCharts","makeChart","getChartOptions","graphs","splice","dataProvider","validateNow","object","includes","valueSplit","split","theme","zipTaskWithTimeData","gridAboveGraphs","startDuration","categoryField","categoryAxis","gridPosition","gridAlpha","tickPosition","balloonText","fillAlphas","lineAlpha","valueField","valueAxes","minimum","maximum","strictMinMax","export","enabled","rowsArray","obj","console","log","ChartJsWrapper","chartJsRootId","Chart","datasets","labels","update","updateTaskColumn","initTimeSpentData","backgroundColor","borderColor","borderWidth","options","animation","easing","legend","display","title","fontSize","fontStyle","text","tooltips","titleFontSize","bodyFontSize","scales","yAxes","ticks","beginAtZero","min","stepSize","scaleSteps","xAxes","categoriesArray","indexRow","FusionChartsWrapper","fusionChartsRootId","FusionCharts","render","args","dataSource","setJSONData","label","id","renderAt","height","dataFormat","caption","xAxisName","yAxisName","yAxisMinValue","yAxisMaxValue","category","o","HighchartsWrapper","highChartsRootId","Highcharts","series","remove","addSeries","svg","plotOptions","spline","dataLabels","marker","enableMouseTracking","yAxis","minRange","xAxis","categories"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4afb38ce57de44598e7","import HighchartsWrapper from './wrappers/highchartsWrapper';\nimport AmChartsWrapper from './wrappers/amChartsWrapper';\nimport ChartJsWrapper from './wrappers/chartJsWrapper';\nimport FusionChartsWrapper from './wrappers/fusionChartsWrapper';\n\nconst SELECTED_CLASS = 'selected';\nconst START = 'Start';\nconst PAUSE = 'Pause';\nconst RESET = 'Reset';\nconst STARTTIME = '00:00:00';\nconst chartWrappers = [];\nconst mapTimerRow = new Map();\nconst mapChartsToWrapper = new Map();\n\nmapChartsToWrapper.set('Highcharts', HighchartsWrapper);\nmapChartsToWrapper.set('amCharts', AmChartsWrapper);\nmapChartsToWrapper.set('Chart.js', ChartJsWrapper);\nmapChartsToWrapper.set('FusionCharts', FusionChartsWrapper);\n\nclass Timer {\n  constructor(row) {\n    this.row = row;\n    this.interval = null;\n    this.currentTime = null;\n    this.duration = 0;\n    this.timeStamp = new Date();\n    this.status = 0;\n  }\n\n  start(hotInstance, row, column) {\n    this.currentTime = hotInstance.getDataAtCell(row, column);\n    this.duration = moment.duration(this.currentTime);\n\n    if (this.status === 0) {\n      this.status = 1;\n      this.interval = setInterval(() => {\n        this.timeStamp = new Date(this.timeStamp.getTime() + 1000);\n\n        this.duration = moment.duration(this.duration.asSeconds() + 1, 'seconds');\n\n        const hours = this.duration.hours();\n        const minutes = this.duration.minutes();\n        const seconds = this.duration.seconds();\n\n        hotInstance.setDataAtCell(row, column, `${hours}:${minutes}:${seconds}`);\n      }, 1000);\n    }\n  }\n\n  pause() {\n    if (this.status === 1) {\n      this.status = 0;\n      clearInterval(this.interval);\n      this.interval = 0;\n    }\n  }\n\n  reset(hotInstance, row, column) {\n    this.status = 0;\n    clearInterval(this.interval);\n    this.interval = null;\n\n    this.currentTime = STARTTIME;\n    this.duration = moment.duration(this.currentTime);\n\n    hotInstance.setDataAtCell(row, column, STARTTIME);\n  }\n}\n\nfunction initButtonsListener(hotInstance) {\n  const rootElement = document.getElementById('root');\n\n  for (let rowIndex = 0; rowIndex < hotInstance.countRows(); rowIndex += 1) {\n    mapTimerRow.set(rowIndex, new Timer(rowIndex));\n  }\n\n  rootElement.addEventListener('click', (event) => {\n    const target = event.target;\n    const isButton = target.nodeName.toLowerCase() === 'button';\n\n    if (isButton) {\n      const td = target.parentNode;\n      const colIndex = td.cellIndex - 2;\n      const rowIndex = td.parentNode.rowIndex - 1;\n\n      if (target.textContent === START) {\n        mapTimerRow.get(rowIndex).start(hotInstance, rowIndex, colIndex);\n      } else if (target.textContent === PAUSE) {\n        mapTimerRow.get(rowIndex).pause();\n        target.textContent = 'Start';\n      } else if (target.textContent === RESET) {\n        mapTimerRow.get(rowIndex).reset(hotInstance, rowIndex, colIndex - 1);\n      }\n    }\n  });\n}\n\nfunction onAfterInit() {\n  const isListItem = document.getElementsByTagName('li');\n  const allListItems = Array.from(isListItem);\n\n  allListItems.forEach((li) => {\n    if (Handsontable.dom.hasClass(li, SELECTED_CLASS)) {\n      const chartName = li.children[0].textContent;\n      const ActiveChartWrapper = mapChartsToWrapper.get(chartName);\n\n      chartWrappers.push(new ActiveChartWrapper('chart', this));\n    }\n  });\n}\n\nfunction onAfterSetDataAtCell(changes) {\n  changes.forEach((change) => {\n    chartWrappers.forEach((chartWrapper) => {\n      const [row, column, , currentValue] = change;\n\n      chartWrapper.updateCellData(row, column, currentValue, this);\n    });\n  });\n}\n\nfunction onAfterRemoveRow(index) {\n  chartWrappers.forEach((chartWrapper) => {\n    chartWrapper.removeRow(index, this);\n  });\n}\n\nfunction onAfterCreateRow(index) {\n  for (let rowIndex = 0; rowIndex < this.countRows(); rowIndex += 1) {\n    mapTimerRow.set(rowIndex, new Timer(rowIndex));\n  }\n\n  chartWrappers.forEach((chartWrapper) => {\n    chartWrapper.addNewRow(index, this);\n  });\n}\n\nfunction startPauseButtonRenderer(instance, td, row, col, prop, value) {\n  let escaped;\n\n  if (mapTimerRow.get(row) === undefined) {\n    escaped = Handsontable.helper.stringify('<button type=\"button\">Start</button>');\n  } else if ((mapTimerRow.get(row).status === 1) && (mapTimerRow.get(row).interval > 0)) {\n    escaped = Handsontable.helper.stringify('<button type=\"button\">Pause</button>');\n  } else if ((mapTimerRow.get(row).status === 1) && (mapTimerRow.get(row).interval > 0)) {\n    escaped = Handsontable.helper.stringify('<button type=\"button\">Pause</button>');\n  } else if ((mapTimerRow.get(row).status === 0) && (mapTimerRow.get(row).interval === 0)) {\n    escaped = Handsontable.helper.stringify('<button type=\"button\">Start</button>');\n  } else {\n    escaped = Handsontable.helper.stringify('<button type=\"button\">Start</button>');\n  }\n\n  Handsontable.dom.addClass(td, 'htCenter');\n\n  td.innerHTML = escaped;\n\n  return td;\n}\n\nfunction resetButtonRenderer(instance, td, row, col, prop, value) {\n  const escaped = Handsontable.helper.stringify('<button type=\"button\">Reset</button>');\n\n  Handsontable.dom.addClass(td, 'htCenter');\n\n  td.innerHTML = escaped;\n\n  return td;\n}\n\nHandsontable.renderers.registerRenderer('start/pause', startPauseButtonRenderer);\nHandsontable.renderers.registerRenderer('reset', resetButtonRenderer);\n\nconst hot = new Handsontable(document.getElementById('root'), {\n  data: [\n    ['Task 1', 'Tom', '13/11/2018', STARTTIME, null, null],\n    ['Task 2', 'Mark', '14/11/2018', STARTTIME, null, null],\n    ['Task 3', 'Kate', '15/11/2018', STARTTIME, null, null],\n  ],\n  colHeaders: ['Task', 'User', 'Date', 'Time spent', 'Start/Pause', 'Reset'],\n  rowHeaders: true,\n  columns: [\n    { },\n    {\n      type: 'dropdown',\n      source: ['Tom', 'Mark', 'Kate', 'Eddy'],\n    },\n    {\n      type: 'date',\n      dateFormat: 'MM/DD/YYYY',\n      correctFormat: true,\n      allowEmpty: false,\n    },\n    {\n      type: 'time',\n      timeFormat: 'HH:mm:ss',\n      correctFormat: true,\n      readOnly: true,\n    },\n    {\n      renderer: 'start/pause',\n      readOnly: true,\n    },\n    {\n      renderer: 'reset',\n      readOnly: true,\n    },\n  ],\n  contextMenu: ['remove_row', 'row_below', 'commentsAddEdit'],\n  className: 'htCenter',\n  width: 650,\n  colWidth: 110,\n  allowInvalid: false,\n  autoWrapCol: true,\n  autoWrapRow: true,\n  afterInit: onAfterInit,\n  afterSetDataAtCell: onAfterSetDataAtCell,\n  afterRemoveRow: onAfterRemoveRow,\n  afterCreateRow: onAfterCreateRow,\n});\n\ninitButtonsListener(hot);\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/index.js","/**\n* A amChart data visualisation.\n*\n* Create amChart instance linked with data from Handsontable.\n*\n* @class AmChartsWrapper.\n*/\nclass AmChartsWrapper {\n/**\n* Create a AmChartsWrapper.\n* @param {string} amChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(amChartsRootId, hotInstance) {\n    this.name = 'amCharts';\n    this.chart = AmCharts.makeChart(amChartsRootId,\n    AmChartsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* amChart options object.\n*\n* @returns {Object} amChart object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      type: 'serial',\n      theme: 'light',\n      dataProvider: AmChartsWrapper.zipTaskWithTimeData(hotInstance),\n      gridAboveGraphs: true,\n      startDuration: 0,\n      categoryField: 'name',\n      categoryAxis: {\n        gridPosition: 'start',\n        gridAlpha: 0,\n        tickPosition: 'start',\n      },\n      graphs: [{\n        balloonText: '[[category]]: <b>[[value]]</b>',\n        fillAlphas: 0.8,\n        lineAlpha: 0.2,\n        type: 'column',\n        valueField: 'data',\n      }],\n      valueAxes: [{\n        minimum: 1,\n        maximum: 120,\n        strictMinMax: true,\n      }],\n      export: {\n        enabled: true,\n      },\n    };\n  }\n\n/**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  name: \"Task 1\",\n*  data: 0\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTaskWithTimeData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const obj = {};\n\n      obj.name = hotInstance.getDataAtCell(index, 0);\n      obj.data = 0;\n\n      rowsArray.push(obj); console.log(obj);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n*\n* Remove row\n*\n* @param {Number} index index remove row.\n*\n*/\n  removeRow(index) {\n    this.chart.graphs[0].data.splice(index, 1);\n    this.chart.dataProvider.splice(index, 1);\n\n    this.chart.validateNow(true);\n  }\n\n  /**\n*\n* Create new row\n*\n* @param {Number} index index next row.\n* @param {Object} Handsontable object.\n*\n*/\n  addNewRow(index, hotInstance) {\n    const object = {};\n\n    object.name = hotInstance.getDataAtCell(index, 0);\n    object.data = 0;\n\n    this.chart.dataProvider.splice(index, 0, object);\n\n    this.chart.validateNow(true);\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateCellData(row, column, value) {\n    if (value.includes(':')) {\n      const valueSplit = value.split(':');\n      const seconds = (((+valueSplit[0]) * (60 * 60)) + ((+valueSplit[1]) * 60) + (+valueSplit[2]));\n\n      this.chart.dataProvider[row].data = seconds;\n      this.chart.validateNow(true);\n    } else if (column === 0) {\n      this.chart.dataProvider[row].name = value;\n      this.chart.validateNow(true);\n    }\n  }\n}\n\nexport default AmChartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/wrappers/amChartsWrapper.js","/**\n* A ChartJs data visualisation.\n*\n* Create ChartJs instance linked with data from Handsontable.\n*\n* @class ChartJsWrapper.\n*/\nclass ChartJsWrapper {\n/**\n* Create a ChartJsWrapper.\n* @param {string} chartJsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(chartJsRootId, hotInstance) {\n    this.name = 'ChartJs';\n    this.chart = new Chart(document.getElementById(chartJsRootId),\n    ChartJsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* ChartJs options object.\n*\n* @returns {Object} ChartJs object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      type: 'bar',\n      data: {\n        labels: ChartJsWrapper.updateTaskColumn(hotInstance),\n        datasets: [{\n          data: ChartJsWrapper.initTimeSpentData(hotInstance),\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n          ],\n          borderWidth: 1,\n        }],\n      },\n      options: {\n        animation: {\n          duration: 1000,\n          easing: 'linear',\n        },\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          fontSize: 32,\n          fontStyle: 'normal',\n          text: 'Chart.js & Handsontable',\n        },\n        tooltips: {\n          titleFontSize: 24,\n          bodyFontSize: 21,\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontSize: 23,\n              min: 0,\n              stepSize: 100,\n            },\n            scaleSteps: 10,\n          }],\n          xAxes: [{\n            ticks: {\n              fontSize: 23,\n            },\n          }],\n        },\n      },\n    };\n  }\n\n  /**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  label: \"Game 1\",\n*  data: [144, 12, 13]\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static initTimeSpentData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      rowsArray.push(0);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a array with task label.\n*/\n  static updateTaskColumn(hotInstance) {\n    const categoriesArray = [];\n\n    for (let indexRow = 0; indexRow < hotInstance.countRows(); indexRow += 1) {\n      categoriesArray.push(hotInstance.getDataAtCell(indexRow, 0));\n    }\n\n    return categoriesArray;\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeRow(index) {\n    this.chart.data.datasets[0].data.splice(index, 1);\n    this.chart.data.labels.splice(index, 1);\n\n    this.chart.update();\n  }\n\n  /**\n*\n* Create new row\n*\n* @param {Number} index index next row.\n* @param {Object} Handsontable object.\n*\n*/\n  addNewRow(index) {\n    this.chart.data.datasets[0].data.splice(index, 0, 0);\n    this.chart.data.labels.splice(index, 0, null);\n\n    this.chart.update();\n  }\n\n  /**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateCellData(row, column, value) {\n    if (value.includes(':')) {\n      const valueSplit = value.split(':');\n      const seconds = (((+valueSplit[0]) * (60 * 60)) + ((+valueSplit[1]) * 60) + (+valueSplit[2]));\n\n      this.chart.data.datasets[0].data[row] = seconds;\n      this.chart.update();\n    } else if (column === 0) {\n      this.chart.data.labels[row] = value;\n      this.chart.update();\n    }\n  }\n}\n\nexport default ChartJsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/wrappers/chartJsWrapper.js","/**\n* A FusionCharts data visualisation.\n*\n* Create FusionCharts instance linked with data from Handsontable.\n*\n* @class FusionChartsWrapper.\n*/\nclass FusionChartsWrapper {\n/**\n* Create a FusionChartsWrapper.\n* @param {string} fusionChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(fusionChartsRootId, hotInstance) {\n    this.name = 'fusioncharts';\n    this.chart = new FusionCharts(FusionChartsWrapper\n      .getChartOptions(fusionChartsRootId, hotInstance))\n    .render();\n  }\n\n/**\n*\n* FusionCharts options object.\n*\n* @returns {Object} FusionCharts object configs.\n*/\n  static getChartOptions(fusionChartsRootId, hotInstance) {\n    return {\n      id: 'fusionChart',\n      type: 'column2d',\n      renderAt: fusionChartsRootId,\n      width: 650,\n      height: 420,\n      dataFormat: 'json',\n      dataSource: {\n        chart: {\n          caption: 'FusionCharts & Handsontable',\n          xAxisName: 'Task',\n          yAxisName: 'Seconds',\n          yAxisMinValue: 1,\n          yAxisMaxValue: 100,\n        },\n        data: FusionChartsWrapper.zipTaskWithTimeData(hotInstance),\n      },\n    };\n  }\n\n/**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  label: \"1\",\n*  value: 0\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTaskWithTimeData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const obj = {};\n\n      obj.label = hotInstance.getDataAtCell(index, 0);\n      obj.value = 0;\n\n      rowsArray.push(obj); console.log(obj);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static updateChartColumns(hotInstance) {\n    const category = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const o = {};\n\n      o.label = hotInstance.getDataAtCell(index, 0);\n\n      category.push(o);\n    }\n\n    return category;\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeRow(index) {\n    this.chart.args.dataSource.data.splice(index, 1);\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n  /**\n*\n* Create new row\n*\n* @param {Number} index index next row.\n* @param {Object} Handsontable object.\n*\n*/\n  addNewRow(index, hotInstance) {\n    const obj = {};\n\n    obj.label = hotInstance.getDataAtCell(index, 0);\n    obj.value = 0;\n\n    this.chart.args.dataSource.data.splice(index, 0, obj);\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateCellData(row, column, value) {\n    if (value.includes(':')) {\n      const valueSplit = value.split(':');\n      const seconds = (((+valueSplit[0]) * (60 * 60)) + ((+valueSplit[1]) * 60) + (+valueSplit[2]));\n\n      this.chart.args.dataSource.data[row].value = seconds;\n      this.chart.setJSONData(this.chart.args.dataSource);\n    } else if (column === 0) {\n      this.chart.args.dataSource.data[row].label = value;\n      this.chart.setJSONData(this.chart.args.dataSource);\n    }\n  }\n}\n\nexport default FusionChartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/wrappers/fusionChartsWrapper.js","/**\n* A Highcharts data visualisation.\n*\n* Create Highcharts instance linked with data from Handsontable.\n*\n* @class HighchartsWrapper.\n*/\nclass HighchartsWrapper {\n/**\n* Create a HighChartsWrapper.\n* @param {string} highChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(highChartsRootId, hotInstance) {\n    this.name = 'highcharts';\n    this.chart = new Highcharts.Chart(document.getElementById(highChartsRootId),\n    HighchartsWrapper.getChartOptions(hotInstance)); console.log(this.chart);\n  }\n\n/**\n*\n* HighCharts options object.\n*\n* @returns {Object} HighCharts object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      chart: {\n        type: 'column',\n        width: 650,\n        animation: Highcharts.svg,\n      },\n      title: {\n        text: 'Highcharts & Handsontable',\n      },\n      plotOptions: {\n        spline: {\n          dataLabels: {\n            enabled: true,\n          },\n          marker: {\n            enabled: true,\n          },\n          enableMouseTracking: false,\n        },\n      },\n      yAxis: {\n        title: {\n          text: 'Seconds',\n        },\n        minRange: 100,\n        min: 0,\n      },\n      xAxis: {\n        categories: HighchartsWrapper.updateTaskColumn(hotInstance),\n      },\n      series: HighchartsWrapper.initTimeSpentData(hotInstance),\n    };\n  }\n\n  /**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n*\n*  \"data\": [0, 1, 2]\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static initTimeSpentData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const object = {};\n\n      object.name = hotInstance.getDataAtCell(index, 0);\n      object.data = 0;\n\n      rowsArray.push(object);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a date array.\n*/\n  static updateTaskColumn(hotInstance) {\n    const categoriesArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      categoriesArray.push(hotInstance.getDataAtCell(index, 0));\n    }\n\n    return categoriesArray;\n  }\n\n  /**\n*\n* Remove row\n*\n* @param {Number} index index remove row.\n* @param {Object} Handsontable object.\n*\n*/\n  removeRow(index, hotInstance) {\n    this.chart.series[index].remove(); console.log(this.chart.series);\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n  /**\n*\n* Create new row\n*\n* @param {Number} index index next row.\n* @param {Object} Handsontable object.\n*\n*/\n  addNewRow(index, hotInstance) {\n    const object = {};\n\n    object.name = 'Task';\n    object.data = 0;\n\n    this.chart.addSeries(object); console.log(this.chart.series);\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} row row index.\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateCellData(row, column, value, hotInstance) {\n    if (value.includes(':')) {\n      const valueSplit = value.split(':');\n      const seconds = (((+valueSplit[0]) * (60 * 60)) + ((+valueSplit[1]) * 60) + (+valueSplit[2]));\n      console.log(this.chart.series);\n      this.chart.series[row].data.update(seconds);\n    } else if (column === 0) {\n      this.chart.series[row].data.update(value);\n    }\n  }\n}\n\nexport default HighchartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/wrappers/highchartsWrapper.js"],"sourceRoot":""}